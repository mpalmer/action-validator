name: Periodic audit
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    paths:
      - "**/Cargo.*"
      - ".github/workflows/audit.yml"
  pull_request:
    branches:
      - main

jobs:
  security_audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Install rust
        id: rust-install
        uses: dtolnay/rust-toolchain@stable

      - name: Cache
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-audit
        run: cargo install cargo-audit --locked

      - name: Audit deps
        run: |
          cargo audit -D warnings

  nightly_compat:
    name: See if future Rust versions (or deps) will break anything
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install rust
        id: rust-install
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy

      # Normally this would be where we use actions/cache, but since nightly
      # is likely to change on every run, it doesn't seem worth it

      - name: Update deps
        run: |
          cargo +${{ steps.rust-install.outputs.name }} update

      - name: Test
        env:
          RUSTFLAGS: -D warnings
        run: |
          cargo +${{ steps.rust-install.outputs.name }} test -- --nocapture
          cargo +${{ steps.rust-install.outputs.name }} test --all-features -- --nocapture

      - name: Clippy
        run: |
          cargo +${{ steps.rust-install.outputs.name }} clippy -- -D warnings
          cargo +${{ steps.rust-install.outputs.name }} clippy --all-features -- -D warnings

  nightly_compat_node:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install rust
        id: rust-install
        uses: dtolnay/rust-toolchain@nightly

      - name: Update deps
        run: |
          cargo +${{ steps.rust-install.outputs.name }} update

      - name: Install rust
        id: rust-install
        uses: dtolnay/rust-toolchain@stable

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          cache: npm
          node-version: nightly

      - name: Update Dependencies
        run: npm update

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build
        # nodejs support is experimental; don't fail the build for it
        continue-on-error: true

      - name: Test
        run: npm test
        # nodejs support is experimental; don't fail the build for it
        continue-on-error: true
